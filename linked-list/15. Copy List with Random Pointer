class Solution {
public:
    Node* copyRandomList(Node* head) {
                if (!head) return nullptr;
        
        Node* curr = head;
        while (curr) {
            Node* new_node = new Node(curr->val);
            new_node->next = curr->next;
            curr->next = new_node;
            curr = new_node->next;
        }
        
        curr = head;
        while (curr) {
            if (curr->random) {
                curr->next->random = curr->random->next;
            }else{
                curr->next->random = NULL;
            }
            curr = curr->next->next;
        }
        
         curr = head;
        Node* newList = head->next;
        Node* temp = newList;
        Node* currNxt ;
        
        while (curr) {
            if(temp->next != NULL){
                currNxt = temp->next;
                temp->next = temp->next->next;
                curr->next = currNxt;
                curr= currNxt;
                temp= temp->next;
            }else{
                curr->next = NULL;
                temp->next = NULL;
                curr= curr->next;
                
            }
        }
        
        return newList;       
    }
};
